
minishift start --profile istio-0-3-0
oc login -u admin -p admin
oc project demo-istio
podName=$(oc get pods -o jsonpath='{.items[*].metadata.name}' -l app=say-service)
oc rsh -c istio-proxy $podName curl http://localhost:15000/logging?upstream=trace
oc logs -f -c istio-proxy $podName




podName=$(oc get pods -o jsonpath='{.items[*].metadata.name}' -l app=say-service)
oc rsh -c istio-proxy $podName
sudo su -
iptables -t nat -L
exit

oc rsh -c istio-proxy $podName curl http://localhost:15000/logging?router=debug

oc expose svc istio-pilot -n istio-system
../../scripts/pilotGetRegistration.sh > registration.json

oc rsh -c istio-proxy $podName cat minsih > envoy-config.json
oc rsh -c istio-proxy $podName cat /etc/istio/proxy/envoy-rev0.json > envoy-config.json

oc rsh -c istio-proxy $podName curl http://localhost:8080/say > say-service.json
echo "\n" >> say-service.json
oc rsh -c istio-proxy $podName curl http://greeting-service:8080/greeting >> greeting-service.json
echo "\n" >> say-service.json
oc rsh -c istio-proxy $podName curl http://greeting-service.demo-istio:8080/greeting >> greeting-service.json

# Works within the pod only
oc rsh -c istio-proxy $podName curl http://say-service:8080/say
oc rsh -c istio-proxy $podName curl http://say-service.demo-istio:8080/say
oc rsh -c istio-proxy $podName curl http://say-service.demo-istio.svc.cluster.local:8080/say

oc rsh -c istio-proxy $podName curl http://localhost:15000 > commands.txt
oc rsh -c istio-proxy $podName curl http://localhost:15000/routes > routes.json
oc rsh -c istio-proxy $podName curl http://localhost:15000/clusters > clusters.txt
oc rsh -c istio-proxy $podName curl http://localhost:15000/listeners > listeners.json
oc rsh -c istio-proxy $podName curl http://localhost:15000/stats > stats.txt
oc rsh -c istio-proxy $podName curl http://localhost:15000/server_info > server_info.txt



